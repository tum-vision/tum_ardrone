#! /usr/bin/env python
PACKAGE='tum_ardrone'

#from driver_base.msg import SensorLevels
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

#       Name                         Type      Reconfiguration lvl    Description                                                   Default             Min     Max
gen.add("Ki_yaw", double_t, 0, "PID control parameter", 0.0, 0.0, 1.0)
gen.add("Kd_yaw", double_t, 0, "PID control parameter", 0.00, 0.0, 1.0)
gen.add("Kp_yaw", double_t, 0, "PID control parameter", 0.05, 0.0, 1.0)
gen.add("max_yaw", double_t, 0, "Max. Yaw control sent (ever)", 1.0, 0.0, 1.0)

gen.add("Ki_gaz", double_t, 0, "PID control parameter", 0.001, 0.0, 1.0)
gen.add("Kd_gaz", double_t, 0, "PID control parameter", 0.1, 0.0, 1.0)
gen.add("Kp_gaz", double_t, 0, "PID control parameter", 0.6, 0.0, 1.0)
gen.add("rise_fac", double_t, 0, "positive gaz values are multiplied by this", 2.5, 0.0, 5.0)
gen.add("max_gaz_rise", double_t, 0, "max. (positive) gaz control sent.", 0.8, 0, 1.0)
gen.add("max_gaz_drop", double_t, 0, "max. (negative) gaz control sent.", -0.25, -1.0, 0.0)

gen.add("Ki_rp", double_t, 0, "PID control parameter", 0.0, 0.0, 1.0)
gen.add("Kd_rp", double_t, 0, "PID control parameter", 0.35, 0.0, 1.0)
gen.add("Kp_rp", double_t, 0, "PID control parameter", 0.5, 0.0, 1.0)
gen.add("max_rp", double_t, 0, "max roll/pitch control sent.", 1.0, 0.0, 1.0)

gen.add("agressiveness", double_t, 0, "global multiplyer to PI control.", 1.0, 0.0, 5.0)



exit(gen.generate(PACKAGE, "Config", "AutopilotParams"))
